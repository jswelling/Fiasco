Makefile:18: warning: overriding recipe for target 'all'
Makefile.common:77: warning: ignoring old recipe for target 'all'
Makefile:18: warning: overriding recipe for target 'depend'
Makefile.common:169: warning: ignoring old recipe for target 'depend'
Makefile:18: warning: overriding recipe for target '.DEFAULT'
Makefile.common:190: warning: ignoring old recipe for target '.DEFAULT'
make ARCH=LINUXX86_64 COMPILE_ARCH=LINUXX86_64 FMRI="/home/welling/git/Fiasco" -f Makefile.common all 2>&1 | \
	grep -v 'recipe for target'
make[1]: Entering directory '/home/welling/git/Fiasco'
"about to include depend.mk.dummy"
src/Makefile.pkg:133: depend.mk.dummy: No such file or directory
"return from include depend.mk.dummy"
depend.mk.dummy is not a valid target.
%%%% Exporting include files from  %%%%
make[2]: Entering directory '/home/welling/git/Fiasco/src/util'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for FMRI utility routines
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		1/96	Written by Greg Hood (PSC)
#		8/96	Made architecture-independent (Greg Hood, PSC)
#

PKG          = util
PKG_EXPORTS  = acct.h array.h bio.h mdbg.h misc.h par.h errors.h \
	       pulse.h rttraj.h
PKG_MAKELIBS = $L/libacct.a $L/libarray.a $L/libbio.a $L/libmdbg.a \
               $L/libmisc.a $L/libpar.a $L/libpulse.a $L/librttraj.a
PKG_MAKEBINS = 
PKG_LIBS     = -lcdf -lfmri -lmri -lpar -lbio -lacct \
	     -lcrg -lmisc -lrttraj $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= libacct.c libarray.c libbio.c libmdbg.c libmisc.c libpar.c \
	ptest.c libpulse.c librttraj.c
HFILES= acct.h array.h bio.h mdbg.h misc.h par.h errors.h pulse.h rttraj.h
DOCFILES= 
SCRIPTFILES= 

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libpulse.a $L/librttraj.a

include ../Makefile.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

.pkg

$L/libacct.a: $O/libacct.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libacct.a $O/libacct.o
	@$(RANLIB) $L/libacct.a

$O/libacct.o: libacct.c
	$(CC_RULE)

$L/libarray.a: $O/libarray.o	
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libarray.a $O/libarray.o	
	@$(RANLIB) $L/libarray.a

$O/libarray.o: libarray.c
	$(CC_RULE)

$L/libbio.a: $O/libbio.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libbio.a $O/libbio.o
	@$(RANLIB) $L/libbio.a

$O/libbio.o: libbio.c
	$(CC_RULE)

$L/libmdbg.a: $O/libmdbg.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmdbg.a $O/libmdbg.o
	@$(RANLIB) $L/libmdbg.a

$O/libmdbg.o: libmdbg.c
	$(CC_RULE)

$L/libmisc.a: $O/libmisc.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libmisc.a $O/libmisc.o
	@$(RANLIB) $L/libmisc.a

$O/libmisc.o: libmisc.c
	$(CC_RULE)

$L/libpar.a: $O/libpar.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpar.a $O/libpar.o
	@$(RANLIB) $L/libpar.a

$O/libpar.o: libpar.c
	$(CC_RULE)

$L/libpulse.a: $O/libpulse.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libpulse.a $O/libpulse.o
	@$(RANLIB) $L/libpulse.a

$O/libpulse.o: libpulse.c
	$(CC_RULE)

$L/librttraj.a: $O/librttraj.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/librttraj.a $O/librttraj.o
	@$(RANLIB) $L/librttraj.a

$O/librttraj.o: librttraj.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for util %%%%
%%%% Exporting include files from util %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/util'
make[2]: Entering directory '/home/welling/git/Fiasco/src/libcrg'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
# Makefile for libcrg library
#	Adapted for PSC by Greg Hood, Sept. 1996
# Author:              Christopher R. Genovese
# Last Modified:       January 1996
#

PKG          = libcrg
PKG_EXPORTS  = stdcrg.h slist.h helphelp.h
PKG_MAKELIBS = $L/libcrg.a
PKG_MAKEBINS = $(CB)/buildhelp

PKG_CFLAGS   = -DDIAGNOSTIC=1 -DDEBUG=0
PKG_LIBS     = -lmisc -lcrg
PKG_OBJS     = $O/buildhelp.o $O/slist.o $O/helphelp.o $O/buildhelp_help.o

MAKEFILES= Makefile macros.m4
CSOURCE= buildhelp.c clproc.c efunc.c help.c helpblank.c inpfproc.c \
	sorting.c slist.c helphelp.c
HFILES= stdcrg.h slist.h helphelp.h
DOCFILES= buildhelp_help.help

include ../Makefile.pkg

$L/libcrg.a: $O/sorting.o $O/inpfproc.o $O/clproc.o $O/help.o $O/efunc.o \
		$O/slist.o $O/helphelp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

elp.o
	@echo "%%%% Building $(@F) %%%%"
	@$(AR) $(ARFLAGS) $L/libcrg.a $O/sorting.o $O/inpfproc.o $O/clproc.o \
              $O/help.o $O/efunc.o $O/slist.o $O/helphelp.o
	@$(RANLIB) $L/libcrg.a

$O/sorting.o: sorting.c
	$(CC_RULE)

$O/inpfproc.o: inpfproc.c
	$(CC_RULE)

$O/clproc.o: clproc.c
	$(CC_RULE)

$O/help.o: help.c
	$(CC_RULE)

$O/efunc.o: efunc.c
	$(CC_RULE)

#
# buildhelp must be built in two steps- stage1 makes a version 
# with stub help routines, which is then used to *create* the help
# routines for the final (stage 2) buildhelp.  The stage1 version
# gets deleted after its job is done.
#

$O/buildhelp_help.o: buildhelp_help.help $(CB)/buildhelp_stage1
	@echo "%%%% Generating $(@F) using buildhelp_stage1 %%%%" ;
	@$(CB)/buildhelp_stage1 buildhelp_help.help $O/tmp
	@$(CC) -c $(CFLAGS) -o $O/buildhelp_help.o $O/tmpHelp.c
#	rm $O/tmpHelp.c

$(CB)/buildhelp_stage1: $O/buildhelp.o $O/helpblank.o $O/slist.o \
		$(PKG_MAKELIBS)
	@echo "%%%% Linking buildhelp_stage1 %%%%"
	@$(LD) $(LFLAGS) -o $(CB)/buildhelp_stage1 $O/buildhelp.o \
		$O/helpblank.o $O/slist.o $O/helphelp.o $(LIBS)

$O/buildhelp.o: buildhelp.c
	$(CC_RULE)

$O/slist.o: slist.c
	$(CC_RULE)

$O/helphelp.o: helphelp.c
	$(CC_RULE)

$O/helpblank.o: helpblank.c
	$(CC_RULE)

$(CB)/buildhelp: $(CB)/buildhelp_stage1 $(PKG_OBJS) $(PKG_MAKELIBS)
	@-rm -f $(CB)/buildhelp_stage1
	$(MULTI_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for libcrg %%%%
%%%% Exporting include files from libcrg %%%%
%%%% Linking buildhelp_stage1 %%%%
%%%% Generating buildhelp_help.o using buildhelp_stage1 %%%%
%%%% Linking buildhelp %%%%
%%%% Generating buildhelp.html %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/libcrg'
make[2]: Entering directory '/home/welling/git/Fiasco/src/libmri'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for libmri %%%%
%%%% Exporting include files from libmri %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/libmri'
make[2]: Entering directory '/home/welling/git/Fiasco/src/libdcdf'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for the C version of cdflib
#
#	Copyright (c) 1999  Pittsburgh Supercomputing Center
#
#	HISTORY
#		4/99	Written by Joel Welling
#

PKG          = libcdf
PKG_EXPORTS  = dcdflib.h
PKG_MAKELIBS = $L/libdcdf.a
PKG_MAKEBINS = cdftester

PKG_LIBS     = $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE = ipmpar.c dcdflib.c cdftester.c
HFILES= dcdflib.h dcdflib_private.h
DOCFILES= README libdcdf_help.help

include ../Makefile.pkg

LIB_OBJ = $O/dcdflib.o $O/ipmpar.o

$L/libdcdf.a: $(LIB_OBJ)
	@echo "%%%% Building libdcdf.a %%%%"
	@$(AR) $(ARFLAGS) $L/libdcdf.a $(LIB_OBJ)
	@$(RANLIB) $L/libdcdf.a

$O/dcdflib.o: dcdflib.c
	$(CC_RULE)

$O/ipmpar.o: ipmpar.c
	$(CC_RULE)

cdftester: $O/cdftester.o $(LIB_OBJ)
	@echo "%%%% Linking $(@F) %%%%"
	@$(LD) -o cdftester $(LFLAGS) $O/cdftester.o $(LIB_OBJ) $(PKG_LIBS) -lm

$O/cdftester.o: cdftester.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for the C version of cdflib
#
#	Copyright (c) 1999  Pittsburgh Supercomputing Center
#
#	HISTORY
#		4/99	Written by Joel Welling
#

PKG          = libcdf
PKG_EXPORTS  = dcdflib.h
PKG_MAKELIBS = $L/libdcdf.a
PKG_MAKEBINS = cdftester

PKG_LIBS     = $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE = ipmpar.c dcdflib.c cdftester.c
HFILES= dcdflib.h dcdflib_private.h
DOCFILES= README libdcdf_help.help

include ../Makefile.pkg

LIB_OBJ = $O/dcdflib.o $O/ipmpar.o

$L/libdcdf.a: $(LIB_OBJ)
	@echo "%%%% Building libdcdf.a %%%%"
	@$(AR) $(ARFLAGS) $L/libdcdf.a $(LIB_OBJ)
	@$(RANLIB) $L/libdcdf.a

$O/dcdflib.o: dcdflib.c
	$(CC_RULE)

$O/ipmpar.o: ipmpar.c
	$(CC_RULE)

cdftester: $O/cdftester.o $(LIB_OBJ)
	@echo "%%%% Linking $(@F) %%%%"
	@$(LD) -o cdftester $(LFLAGS) $O/cdftester.o $(LIB_OBJ) $(PKG_LIBS) -lm

$O/cdftester.o: cdftester.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for the C version of cdflib
#
#	Copyright (c) 1999  Pittsburgh Supercomputing Center
#
#	HISTORY
#		4/99	Written by Joel Welling
#

PKG          = libcdf
PKG_EXPORTS  = dcdflib.h
PKG_MAKELIBS = $L/libdcdf.a
PKG_MAKEBINS = cdftester

PKG_LIBS     = $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE = ipmpar.c dcdflib.c cdftester.c
HFILES= dcdflib.h dcdflib_private.h
DOCFILES= README libdcdf_help.help

include ../Makefile.pkg

LIB_OBJ = $O/dcdflib.o $O/ipmpar.o

$L/libdcdf.a: $(LIB_OBJ)
	@echo "%%%% Building libdcdf.a %%%%"
	@$(AR) $(ARFLAGS) $L/libdcdf.a $(LIB_OBJ)
	@$(RANLIB) $L/libdcdf.a

$O/dcdflib.o: dcdflib.c
	$(CC_RULE)

$O/ipmpar.o: ipmpar.c
	$(CC_RULE)

cdftester: $O/cdftester.o $(LIB_OBJ)
	@echo "%%%% Linking $(@F) %%%%"
	@$(LD) -o cdftester $(LFLAGS) $O/cdftester.o $(LIB_OBJ) $(PKG_LIBS) -lm

$O/cdftester.o: cdftester.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for the C version of cdflib
#
#	Copyright (c) 1999  Pittsburgh Supercomputing Center
#
#	HISTORY
#		4/99	Written by Joel Welling
#

PKG          = libcdf
PKG_EXPORTS  = dcdflib.h
PKG_MAKELIBS = $L/libdcdf.a
PKG_MAKEBINS = cdftester

PKG_LIBS     = $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE = ipmpar.c dcdflib.c cdftester.c
HFILES= dcdflib.h dcdflib_private.h
DOCFILES= README libdcdf_help.help

include ../Makefile.pkg

LIB_OBJ = $O/dcdflib.o $O/ipmpar.o

$L/libdcdf.a: $(LIB_OBJ)
	@echo "%%%% Building libdcdf.a %%%%"
	@$(AR) $(ARFLAGS) $L/libdcdf.a $(LIB_OBJ)
	@$(RANLIB) $L/libdcdf.a

$O/dcdflib.o: dcdflib.c
	$(CC_RULE)

$O/ipmpar.o: ipmpar.c
	$(CC_RULE)

cdftester: $O/cdftester.o $(LIB_OBJ)
	@echo "%%%% Linking $(@F) %%%%"
	@$(LD) -o cdftester $(LFLAGS) $O/cdftester.o $(LIB_OBJ) $(PKG_LIBS) -lm

$O/cdftester.o: cdftester.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for the C version of cdflib
#
#	Copyright (c) 1999  Pittsburgh Supercomputing Center
#
#	HISTORY
#		4/99	Written by Joel Welling
#

PKG          = libcdf
PKG_EXPORTS  = dcdflib.h
PKG_MAKELIBS = $L/libdcdf.a
PKG_MAKEBINS = cdftester

PKG_LIBS     = $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE = ipmpar.c dcdflib.c cdftester.c
HFILES= dcdflib.h dcdflib_private.h
DOCFILES= README libdcdf_help.help

include ../Makefile.pkg

LIB_OBJ = $O/dcdflib.o $O/ipmpar.o

$L/libdcdf.a: $(LIB_OBJ)
	@echo "%%%% Building libdcdf.a %%%%"
	@$(AR) $(ARFLAGS) $L/libdcdf.a $(LIB_OBJ)
	@$(RANLIB) $L/libdcdf.a

$O/dcdflib.o: dcdflib.c
	$(CC_RULE)

$O/ipmpar.o: ipmpar.c
	$(CC_RULE)

cdftester: $O/cdftester.o $(LIB_OBJ)
	@echo "%%%% Linking $(@F) %%%%"
	@$(LD) -o cdftester $(LFLAGS) $O/cdftester.o $(LIB_OBJ) $(PKG_LIBS) -lm

$O/cdftester.o: cdftester.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for the C version of cdflib
#
#	Copyright (c) 1999  Pittsburgh Supercomputing Center
#
#	HISTORY
#		4/99	Written by Joel Welling
#

PKG          = libcdf
PKG_EXPORTS  = dcdflib.h
PKG_MAKELIBS = $L/libdcdf.a
PKG_MAKEBINS = cdftester

PKG_LIBS     = $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE = ipmpar.c dcdflib.c cdftester.c
HFILES= dcdflib.h dcdflib_private.h
DOCFILES= README libdcdf_help.help

include ../Makefile.pkg

LIB_OBJ = $O/dcdflib.o $O/ipmpar.o

$L/libdcdf.a: $(LIB_OBJ)
	@echo "%%%% Building libdcdf.a %%%%"
	@$(AR) $(ARFLAGS) $L/libdcdf.a $(LIB_OBJ)
	@$(RANLIB) $L/libdcdf.a

$O/dcdflib.o: dcdflib.c
	$(CC_RULE)

$O/ipmpar.o: ipmpar.c
	$(CC_RULE)

cdftester: $O/cdftester.o $(LIB_OBJ)
	@echo "%%%% Linking $(@F) %%%%"
	@$(LD) -o cdftester $(LFLAGS) $O/cdftester.o $(LIB_OBJ) $(PKG_LIBS) -lm

$O/cdftester.o: cdftester.c
	$(CC_RULE)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for libcdf %%%%
%%%% Exporting include files from libcdf %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/libdcdf'
make[2]: Entering directory '/home/welling/git/Fiasco/src/fmri'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for fmri %%%%
%%%% Exporting include files from fmri %%%%
%%%% Building python module quaternion.py %%%%
running build
running build_py
running build_ext
%%%% Building python module _quaternion.so %%%%
running build
running build_py
running build_ext
%%%% Building python module fiasco_numpy.py %%%%
running build
running build_py
running build_ext
%%%% Building python module _fiasco_numpy.so %%%%
running build
running build_py
running build_ext
# This target captures the build environment in a sourceable file
echo CFLAGS='"'-D_BSD_SOURCE -D_XOPEN_SOURCE=500 -DFORTRAN_ADD_UNDERSCORE -Wimplicit -DLINUX -O -fPIC -DLINUXX86_64 -I/home/welling/git/Fiasco/include/LINUXX86_64 -DMPI -DFFTW3      -DNOAFS  -I/home/welling/anaconda3/envs/py3Env/include/python3.7'"' \
	> build_envs.bash
echo LFLAGS='"'-L/home/welling/git/Fiasco/lib/LINUXX86_64  -lfftw3 -lm -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg -llapack -lblas -lm'"' \
	>> build_envs.bash
make[2]: Leaving directory '/home/welling/git/Fiasco/src/fmri'
make[2]: Entering directory '/home/welling/git/Fiasco/src/reader'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for reader %%%%
%%%% Exporting include files from reader %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/reader'
make[2]: Entering directory '/home/welling/git/Fiasco/src/mri_util'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for mri_util %%%%
%%%% Exporting include files from mri_util %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/mri_util'
make[2]: Entering directory '/home/welling/git/Fiasco/src/mri_anova'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
ersity
#
#	HISTORY
#		9/98	Written by Joel S. Welling (CMU)
#

PKG          = mri_anova
PKG_MAKEBINS = $(CB)/mri_anova 

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= mri_anova.c 
HFILES= 
DOCFILES= mri_anova_help.help
MISCFILES= 

include ../Makefile.pkg

PKG_OBJS = 

LIBFILES= $L/libfmri.a $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a \
	$L/libmisc.a $L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h slave_splus.h

$O/mri_anova.o: mri_anova.c
	$(CC_RULE)

$O/mri_anova_help.o: mri_anova_help.help
	$(HELP_RULE)

$(CB)/mri_anova: $O/mri_anova.o $O/mri_anova_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

ersity
#
#	HISTORY
#		9/98	Written by Joel S. Welling (CMU)
#

PKG          = mri_anova
PKG_MAKEBINS = $(CB)/mri_anova 

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= mri_anova.c 
HFILES= 
DOCFILES= mri_anova_help.help
MISCFILES= 

include ../Makefile.pkg

PKG_OBJS = 

LIBFILES= $L/libfmri.a $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a \
	$L/libmisc.a $L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h slave_splus.h

$O/mri_anova.o: mri_anova.c
	$(CC_RULE)

$O/mri_anova_help.o: mri_anova_help.help
	$(HELP_RULE)

$(CB)/mri_anova: $O/mri_anova.o $O/mri_anova_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

ersity
#
#	HISTORY
#		9/98	Written by Joel S. Welling (CMU)
#

PKG          = mri_anova
PKG_MAKEBINS = $(CB)/mri_anova 

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= mri_anova.c 
HFILES= 
DOCFILES= mri_anova_help.help
MISCFILES= 

include ../Makefile.pkg

PKG_OBJS = 

LIBFILES= $L/libfmri.a $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a \
	$L/libmisc.a $L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h slave_splus.h

$O/mri_anova.o: mri_anova.c
	$(CC_RULE)

$O/mri_anova_help.o: mri_anova_help.help
	$(HELP_RULE)

$(CB)/mri_anova: $O/mri_anova.o $O/mri_anova_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

ersity
#
#	HISTORY
#		9/98	Written by Joel S. Welling (CMU)
#

PKG          = mri_anova
PKG_MAKEBINS = $(CB)/mri_anova 

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= mri_anova.c 
HFILES= 
DOCFILES= mri_anova_help.help
MISCFILES= 

include ../Makefile.pkg

PKG_OBJS = 

LIBFILES= $L/libfmri.a $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a \
	$L/libmisc.a $L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h slave_splus.h

$O/mri_anova.o: mri_anova.c
	$(CC_RULE)

$O/mri_anova_help.o: mri_anova_help.help
	$(HELP_RULE)

$(CB)/mri_anova: $O/mri_anova.o $O/mri_anova_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for mri_anova %%%%
%%%% Exporting include files from mri_anova %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/mri_anova'
make[2]: Entering directory '/home/welling/git/Fiasco/src/misc'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for misc %%%%
%%%% Exporting include files from misc %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/misc'
make[2]: Entering directory '/home/welling/git/Fiasco/src/image_proc'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for image proc
#
#	Copyright (c) 2002 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		May 2002 Written by Jennifer Bakal (CMU)
#

PKG          = image_proc
PKG_MAKEBINS = $(CB)/mri_to_img $(CB)/matte $(CB)/colorize

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc -lm \
	-ldcdf $(LAPACK_LIBS)

MAKEFILES= Makefile
CSOURCE= mri_to_img.c matte.c colorize.c
DOCFILES= mri_to_img_help.help matte_help.help colorize_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/mri_to_img.o: mri_to_img.c
	$(CC_RULE)

$O/mri_to_img_help.o: mri_to_img_help.help
	$(HELP_RULE)

$(CB)/mri_to_img: $O/mri_to_img.o $O/mri_to_img_help.o
	$(SINGLE_HELP_LD)

$O/matte.o: matte.c
	$(CC_RULE)

$O/matte_help.o: matte_help.help
	$(HELP_RULE)

$(CB)/matte: $O/matte.o $O/matte_help.o
	$(SINGLE_HELP_LD)

$O/colorize.o: colorize.c
	$(CC_RULE)

$O/colorize_help.o: colorize_help.help
	$(HELP_RULE)

$(CB)/colorize: $O/colorize.o $O/colorize_help.o
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for image_proc %%%%
%%%% Exporting include files from image_proc %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/image_proc'
make[2]: Entering directory '/home/welling/git/Fiasco/src/meanc'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for meanc
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = meanc
PKG_MAKEBINS = $(CB)/meanc $(CB)/meanc3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= meanc.c meanc3d.c
DOCFILES= meanc_help.help meanc3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/meanc.o: meanc.c
	$(CC_RULE)

$O/meanc_help.o: meanc_help.help
	$(HELP_RULE)

$(CB)/meanc: $O/meanc.o $O/meanc_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/meanc3d.o: meanc3d.c
	$(CC_RULE)

$O/meanc3d_help.o: meanc3d_help.help
	$(HELP_RULE)

$(CB)/meanc3d: $O/meanc3d.o $O/meanc3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for meanc
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = meanc
PKG_MAKEBINS = $(CB)/meanc $(CB)/meanc3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= meanc.c meanc3d.c
DOCFILES= meanc_help.help meanc3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/meanc.o: meanc.c
	$(CC_RULE)

$O/meanc_help.o: meanc_help.help
	$(HELP_RULE)

$(CB)/meanc: $O/meanc.o $O/meanc_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/meanc3d.o: meanc3d.c
	$(CC_RULE)

$O/meanc3d_help.o: meanc3d_help.help
	$(HELP_RULE)

$(CB)/meanc3d: $O/meanc3d.o $O/meanc3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for meanc
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = meanc
PKG_MAKEBINS = $(CB)/meanc $(CB)/meanc3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= meanc.c meanc3d.c
DOCFILES= meanc_help.help meanc3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/meanc.o: meanc.c
	$(CC_RULE)

$O/meanc_help.o: meanc_help.help
	$(HELP_RULE)

$(CB)/meanc: $O/meanc.o $O/meanc_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/meanc3d.o: meanc3d.c
	$(CC_RULE)

$O/meanc3d_help.o: meanc3d_help.help
	$(HELP_RULE)

$(CB)/meanc3d: $O/meanc3d.o $O/meanc3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for meanc
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = meanc
PKG_MAKEBINS = $(CB)/meanc $(CB)/meanc3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= meanc.c meanc3d.c
DOCFILES= meanc_help.help meanc3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/meanc.o: meanc.c
	$(CC_RULE)

$O/meanc_help.o: meanc_help.help
	$(HELP_RULE)

$(CB)/meanc: $O/meanc.o $O/meanc_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/meanc3d.o: meanc3d.c
	$(CC_RULE)

$O/meanc3d_help.o: meanc3d_help.help
	$(HELP_RULE)

$(CB)/meanc3d: $O/meanc3d.o $O/meanc3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for meanc
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = meanc
PKG_MAKEBINS = $(CB)/meanc $(CB)/meanc3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= meanc.c meanc3d.c
DOCFILES= meanc_help.help meanc3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/meanc.o: meanc.c
	$(CC_RULE)

$O/meanc_help.o: meanc_help.help
	$(HELP_RULE)

$(CB)/meanc: $O/meanc.o $O/meanc_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/meanc3d.o: meanc3d.c
	$(CC_RULE)

$O/meanc3d_help.o: meanc3d_help.help
	$(HELP_RULE)

$(CB)/meanc3d: $O/meanc3d.o $O/meanc3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for meanc
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = meanc
PKG_MAKEBINS = $(CB)/meanc $(CB)/meanc3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= meanc.c meanc3d.c
DOCFILES= meanc_help.help meanc3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/meanc.o: meanc.c
	$(CC_RULE)

$O/meanc_help.o: meanc_help.help
	$(HELP_RULE)

$(CB)/meanc: $O/meanc.o $O/meanc_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/meanc3d.o: meanc3d.c
	$(CC_RULE)

$O/meanc3d_help.o: meanc3d_help.help
	$(HELP_RULE)

$(CB)/meanc3d: $O/meanc3d.o $O/meanc3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for meanc
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = meanc
PKG_MAKEBINS = $(CB)/meanc $(CB)/meanc3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= meanc.c meanc3d.c
DOCFILES= meanc_help.help meanc3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/meanc.o: meanc.c
	$(CC_RULE)

$O/meanc_help.o: meanc_help.help
	$(HELP_RULE)

$(CB)/meanc: $O/meanc.o $O/meanc_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/meanc3d.o: meanc3d.c
	$(CC_RULE)

$O/meanc3d_help.o: meanc3d_help.help
	$(HELP_RULE)

$(CB)/meanc3d: $O/meanc3d.o $O/meanc3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for meanc %%%%
%%%% Exporting include files from meanc %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/meanc'
make[2]: Entering directory '/home/welling/git/Fiasco/src/baseline'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for baseline
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		9/96	Written by Greg Hood (PSC)
#

PKG          = baseline
PKG_MAKEBINS = $(CB)/baseline

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= baseline.c
DOCFILES= baseline_help.help

include ../Makefile.pkg

$O/baseline.o: baseline.c
	$(CC_RULE)

$O/baseline_help.o: baseline_help.help
	$(HELP_RULE)

$(CB)/baseline: $O/baseline.o $O/baseline_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for baseline
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		9/96	Written by Greg Hood (PSC)
#

PKG          = baseline
PKG_MAKEBINS = $(CB)/baseline

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= baseline.c
DOCFILES= baseline_help.help

include ../Makefile.pkg

$O/baseline.o: baseline.c
	$(CC_RULE)

$O/baseline_help.o: baseline_help.help
	$(HELP_RULE)

$(CB)/baseline: $O/baseline.o $O/baseline_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for baseline
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		9/96	Written by Greg Hood (PSC)
#

PKG          = baseline
PKG_MAKEBINS = $(CB)/baseline

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= baseline.c
DOCFILES= baseline_help.help

include ../Makefile.pkg

$O/baseline.o: baseline.c
	$(CC_RULE)

$O/baseline_help.o: baseline_help.help
	$(HELP_RULE)

$(CB)/baseline: $O/baseline.o $O/baseline_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for baseline
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		9/96	Written by Greg Hood (PSC)
#

PKG          = baseline
PKG_MAKEBINS = $(CB)/baseline

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= baseline.c
DOCFILES= baseline_help.help

include ../Makefile.pkg

$O/baseline.o: baseline.c
	$(CC_RULE)

$O/baseline_help.o: baseline_help.help
	$(HELP_RULE)

$(CB)/baseline: $O/baseline.o $O/baseline_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for baseline %%%%
%%%% Exporting include files from baseline %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/baseline'
make[2]: Entering directory '/home/welling/git/Fiasco/src/deghost'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for deghost
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = deghost
PKG_MAKEBINS = $(CB)/deghost $(CB)/nav_deghost

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg \
	     $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= deghost.c nav_deghost.c
DOCFILES= deghost_help.help nav_deghost_help.help

include ../Makefile.pkg

$O/deghost.o: deghost.c
	$(CC_RULE)

$O/deghost_help.o: deghost_help.help
	$(HELP_RULE)

$(CB)/deghost: $O/deghost.o $O/deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/nav_deghost.o: nav_deghost.c
	$(CC_RULE)

$O/nav_deghost_help.o: nav_deghost_help.help
	$(HELP_RULE)

$(CB)/nav_deghost: $O/nav_deghost.o $O/nav_deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for deghost
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = deghost
PKG_MAKEBINS = $(CB)/deghost $(CB)/nav_deghost

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg \
	     $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= deghost.c nav_deghost.c
DOCFILES= deghost_help.help nav_deghost_help.help

include ../Makefile.pkg

$O/deghost.o: deghost.c
	$(CC_RULE)

$O/deghost_help.o: deghost_help.help
	$(HELP_RULE)

$(CB)/deghost: $O/deghost.o $O/deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/nav_deghost.o: nav_deghost.c
	$(CC_RULE)

$O/nav_deghost_help.o: nav_deghost_help.help
	$(HELP_RULE)

$(CB)/nav_deghost: $O/nav_deghost.o $O/nav_deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for deghost
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = deghost
PKG_MAKEBINS = $(CB)/deghost $(CB)/nav_deghost

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg \
	     $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= deghost.c nav_deghost.c
DOCFILES= deghost_help.help nav_deghost_help.help

include ../Makefile.pkg

$O/deghost.o: deghost.c
	$(CC_RULE)

$O/deghost_help.o: deghost_help.help
	$(HELP_RULE)

$(CB)/deghost: $O/deghost.o $O/deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/nav_deghost.o: nav_deghost.c
	$(CC_RULE)

$O/nav_deghost_help.o: nav_deghost_help.help
	$(HELP_RULE)

$(CB)/nav_deghost: $O/nav_deghost.o $O/nav_deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for deghost
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = deghost
PKG_MAKEBINS = $(CB)/deghost $(CB)/nav_deghost

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg \
	     $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= deghost.c nav_deghost.c
DOCFILES= deghost_help.help nav_deghost_help.help

include ../Makefile.pkg

$O/deghost.o: deghost.c
	$(CC_RULE)

$O/deghost_help.o: deghost_help.help
	$(HELP_RULE)

$(CB)/deghost: $O/deghost.o $O/deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/nav_deghost.o: nav_deghost.c
	$(CC_RULE)

$O/nav_deghost_help.o: nav_deghost_help.help
	$(HELP_RULE)

$(CB)/nav_deghost: $O/nav_deghost.o $O/nav_deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for deghost
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = deghost
PKG_MAKEBINS = $(CB)/deghost $(CB)/nav_deghost

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg \
	     $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= deghost.c nav_deghost.c
DOCFILES= deghost_help.help nav_deghost_help.help

include ../Makefile.pkg

$O/deghost.o: deghost.c
	$(CC_RULE)

$O/deghost_help.o: deghost_help.help
	$(HELP_RULE)

$(CB)/deghost: $O/deghost.o $O/deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/nav_deghost.o: nav_deghost.c
	$(CC_RULE)

$O/nav_deghost_help.o: nav_deghost_help.help
	$(HELP_RULE)

$(CB)/nav_deghost: $O/nav_deghost.o $O/nav_deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for deghost
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = deghost
PKG_MAKEBINS = $(CB)/deghost $(CB)/nav_deghost

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg \
	     $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= deghost.c nav_deghost.c
DOCFILES= deghost_help.help nav_deghost_help.help

include ../Makefile.pkg

$O/deghost.o: deghost.c
	$(CC_RULE)

$O/deghost_help.o: deghost_help.help
	$(HELP_RULE)

$(CB)/deghost: $O/deghost.o $O/deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/nav_deghost.o: nav_deghost.c
	$(CC_RULE)

$O/nav_deghost_help.o: nav_deghost_help.help
	$(HELP_RULE)

$(CB)/nav_deghost: $O/nav_deghost.o $O/nav_deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for deghost
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = deghost
PKG_MAKEBINS = $(CB)/deghost $(CB)/nav_deghost

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg \
	     $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= deghost.c nav_deghost.c
DOCFILES= deghost_help.help nav_deghost_help.help

include ../Makefile.pkg

$O/deghost.o: deghost.c
	$(CC_RULE)

$O/deghost_help.o: deghost_help.help
	$(HELP_RULE)

$(CB)/deghost: $O/deghost.o $O/deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/nav_deghost.o: nav_deghost.c
	$(CC_RULE)

$O/nav_deghost_help.o: nav_deghost_help.help
	$(HELP_RULE)

$(CB)/nav_deghost: $O/nav_deghost.o $O/nav_deghost_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for deghost %%%%
%%%% Exporting include files from deghost %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/deghost'
make[2]: Entering directory '/home/welling/git/Fiasco/src/recon'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for recon
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = recon
PKG_MAKEBINS = $(CB)/recon

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= recon.c
DOCFILES= recon_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/recon.o: recon.c
	$(CC_RULE)

$O/recon_help.o: recon_help.help
	$(HELP_RULE)

$(CB)/recon: $O/recon.o $O/recon_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for recon
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = recon
PKG_MAKEBINS = $(CB)/recon

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= recon.c
DOCFILES= recon_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/recon.o: recon.c
	$(CC_RULE)

$O/recon_help.o: recon_help.help
	$(HELP_RULE)

$(CB)/recon: $O/recon.o $O/recon_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for recon
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = recon
PKG_MAKEBINS = $(CB)/recon

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= recon.c
DOCFILES= recon_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/recon.o: recon.c
	$(CC_RULE)

$O/recon_help.o: recon_help.help
	$(HELP_RULE)

$(CB)/recon: $O/recon.o $O/recon_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for recon
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = recon
PKG_MAKEBINS = $(CB)/recon

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= recon.c
DOCFILES= recon_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/recon.o: recon.c
	$(CC_RULE)

$O/recon_help.o: recon_help.help
	$(HELP_RULE)

$(CB)/recon: $O/recon.o $O/recon_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for recon %%%%
%%%% Exporting include files from recon %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/recon'
make[2]: Entering directory '/home/welling/git/Fiasco/src/smregpar'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for smregpar
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = smregpar
PKG_MAKEBINS = $(CB)/smregpar

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= smregpar.c
DOCFILES= smregpar_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/smregpar.o: smregpar.c
	$(CC_RULE)

$O/smregpar_help.o: smregpar_help.help
	$(HELP_RULE)

$(CB)/smregpar: $O/smregpar.o $O/smregpar_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for smregpar
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = smregpar
PKG_MAKEBINS = $(CB)/smregpar

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= smregpar.c
DOCFILES= smregpar_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/smregpar.o: smregpar.c
	$(CC_RULE)

$O/smregpar_help.o: smregpar_help.help
	$(HELP_RULE)

$(CB)/smregpar: $O/smregpar.o $O/smregpar_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for smregpar
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = smregpar
PKG_MAKEBINS = $(CB)/smregpar

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= smregpar.c
DOCFILES= smregpar_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/smregpar.o: smregpar.c
	$(CC_RULE)

$O/smregpar_help.o: smregpar_help.help
	$(HELP_RULE)

$(CB)/smregpar: $O/smregpar.o $O/smregpar_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for smregpar
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = smregpar
PKG_MAKEBINS = $(CB)/smregpar

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= smregpar.c
DOCFILES= smregpar_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/smregpar.o: smregpar.c
	$(CC_RULE)

$O/smregpar_help.o: smregpar_help.help
	$(HELP_RULE)

$(CB)/smregpar: $O/smregpar.o $O/smregpar_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for smregpar %%%%
%%%% Exporting include files from smregpar %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/smregpar'
make[2]: Entering directory '/home/welling/git/Fiasco/src/ireg'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for ireg
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg
PKG_MAKEBINS = $(CB)/ireg 

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg.c
DOCFILES= ireg_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg.o: ireg.c
	$(CC_RULE)

$O/ireg_help.o: ireg_help.help
	$(HELP_RULE)

$(CB)/ireg: $O/ireg.o $O/ireg_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$(CB)/ireg_chirp: $O/ireg.o $O/ireg_help.o $O/../fmri/chirprot.o $(LIBFILES)
	$(LD) $(LFLAGS) -o $B/$(@F) $O/ireg.o $O/ireg_help.o \
		$O/../fmri/chirprot.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg
PKG_MAKEBINS = $(CB)/ireg 

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg.c
DOCFILES= ireg_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg.o: ireg.c
	$(CC_RULE)

$O/ireg_help.o: ireg_help.help
	$(HELP_RULE)

$(CB)/ireg: $O/ireg.o $O/ireg_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$(CB)/ireg_chirp: $O/ireg.o $O/ireg_help.o $O/../fmri/chirprot.o $(LIBFILES)
	$(LD) $(LFLAGS) -o $B/$(@F) $O/ireg.o $O/ireg_help.o \
		$O/../fmri/chirprot.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg
PKG_MAKEBINS = $(CB)/ireg 

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg.c
DOCFILES= ireg_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg.o: ireg.c
	$(CC_RULE)

$O/ireg_help.o: ireg_help.help
	$(HELP_RULE)

$(CB)/ireg: $O/ireg.o $O/ireg_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$(CB)/ireg_chirp: $O/ireg.o $O/ireg_help.o $O/../fmri/chirprot.o $(LIBFILES)
	$(LD) $(LFLAGS) -o $B/$(@F) $O/ireg.o $O/ireg_help.o \
		$O/../fmri/chirprot.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg
PKG_MAKEBINS = $(CB)/ireg 

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg.c
DOCFILES= ireg_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg.o: ireg.c
	$(CC_RULE)

$O/ireg_help.o: ireg_help.help
	$(HELP_RULE)

$(CB)/ireg: $O/ireg.o $O/ireg_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$(CB)/ireg_chirp: $O/ireg.o $O/ireg_help.o $O/../fmri/chirprot.o $(LIBFILES)
	$(LD) $(LFLAGS) -o $B/$(@F) $O/ireg.o $O/ireg_help.o \
		$O/../fmri/chirprot.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg
PKG_MAKEBINS = $(CB)/ireg 

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg.c
DOCFILES= ireg_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg.o: ireg.c
	$(CC_RULE)

$O/ireg_help.o: ireg_help.help
	$(HELP_RULE)

$(CB)/ireg: $O/ireg.o $O/ireg_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$(CB)/ireg_chirp: $O/ireg.o $O/ireg_help.o $O/../fmri/chirprot.o $(LIBFILES)
	$(LD) $(LFLAGS) -o $B/$(@F) $O/ireg.o $O/ireg_help.o \
		$O/../fmri/chirprot.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for ireg %%%%
%%%% Exporting include files from ireg %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/ireg'
make[2]: Entering directory '/home/welling/git/Fiasco/src/outlier'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for outlier
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = outlier
PKG_MAKEBINS = $(CB)/outlier

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= outlier.c
DOCFILES= outlier_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/outlier.o: outlier.c
	$(CC_RULE)

$O/outlier_help.o: outlier_help.help
	$(HELP_RULE)

$(CB)/outlier: $O/outlier.o $O/outlier_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for outlier
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = outlier
PKG_MAKEBINS = $(CB)/outlier

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= outlier.c
DOCFILES= outlier_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/outlier.o: outlier.c
	$(CC_RULE)

$O/outlier_help.o: outlier_help.help
	$(HELP_RULE)

$(CB)/outlier: $O/outlier.o $O/outlier_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for outlier
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = outlier
PKG_MAKEBINS = $(CB)/outlier

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= outlier.c
DOCFILES= outlier_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/outlier.o: outlier.c
	$(CC_RULE)

$O/outlier_help.o: outlier_help.help
	$(HELP_RULE)

$(CB)/outlier: $O/outlier.o $O/outlier_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for outlier
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = outlier
PKG_MAKEBINS = $(CB)/outlier

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= outlier.c
DOCFILES= outlier_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/outlier.o: outlier.c
	$(CC_RULE)

$O/outlier_help.o: outlier_help.help
	$(HELP_RULE)

$(CB)/outlier: $O/outlier.o $O/outlier_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for outlier %%%%
%%%% Exporting include files from outlier %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/outlier'
make[2]: Entering directory '/home/welling/git/Fiasco/src/detrend'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for detrend
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = detrend
PKG_MAKEBINS = $(CB)/detrend

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= detrend.c
DOCFILES= detrend_help.help

include ../Makefile.pkg

$O/detrend.o: detrend.c
	$(CC_RULE)

$O/detrend_help.o: detrend_help.help
	$(HELP_RULE)

$(CB)/detrend: $O/detrend.o $O/detrend_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for detrend
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = detrend
PKG_MAKEBINS = $(CB)/detrend

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= detrend.c
DOCFILES= detrend_help.help

include ../Makefile.pkg

$O/detrend.o: detrend.c
	$(CC_RULE)

$O/detrend_help.o: detrend_help.help
	$(HELP_RULE)

$(CB)/detrend: $O/detrend.o $O/detrend_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for detrend
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = detrend
PKG_MAKEBINS = $(CB)/detrend

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= detrend.c
DOCFILES= detrend_help.help

include ../Makefile.pkg

$O/detrend.o: detrend.c
	$(CC_RULE)

$O/detrend_help.o: detrend_help.help
	$(HELP_RULE)

$(CB)/detrend: $O/detrend.o $O/detrend_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for detrend
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = detrend
PKG_MAKEBINS = $(CB)/detrend

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= detrend.c
DOCFILES= detrend_help.help

include ../Makefile.pkg

$O/detrend.o: detrend.c
	$(CC_RULE)

$O/detrend_help.o: detrend_help.help
	$(HELP_RULE)

$(CB)/detrend: $O/detrend.o $O/detrend_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for detrend %%%%
%%%% Exporting include files from detrend %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/detrend'
make[2]: Entering directory '/home/welling/git/Fiasco/src/intsplit'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for intsplit
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = intsplit
PKG_MAKEBINS = $(CB)/intsplit

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= intsplit.c
DOCFILES= intsplit_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/intsplit.o: intsplit.c
	$(CC_RULE)

$O/intsplit_help.o: intsplit_help.help
	$(HELP_RULE)

$(CB)/intsplit: $O/intsplit.o $O/intsplit_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for intsplit
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = intsplit
PKG_MAKEBINS = $(CB)/intsplit

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= intsplit.c
DOCFILES= intsplit_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/intsplit.o: intsplit.c
	$(CC_RULE)

$O/intsplit_help.o: intsplit_help.help
	$(HELP_RULE)

$(CB)/intsplit: $O/intsplit.o $O/intsplit_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for intsplit
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = intsplit
PKG_MAKEBINS = $(CB)/intsplit

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= intsplit.c
DOCFILES= intsplit_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/intsplit.o: intsplit.c
	$(CC_RULE)

$O/intsplit_help.o: intsplit_help.help
	$(HELP_RULE)

$(CB)/intsplit: $O/intsplit.o $O/intsplit_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for intsplit
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = intsplit
PKG_MAKEBINS = $(CB)/intsplit

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= intsplit.c
DOCFILES= intsplit_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/intsplit.o: intsplit.c
	$(CC_RULE)

$O/intsplit_help.o: intsplit_help.help
	$(HELP_RULE)

$(CB)/intsplit: $O/intsplit.o $O/intsplit_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for intsplit %%%%
%%%% Exporting include files from intsplit %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/intsplit'
make[2]: Entering directory '/home/welling/git/Fiasco/src/stats'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for stats
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = stats
PKG_MAKEBINS = $(CB)/stats

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= stats.c
DOCFILES= stats_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/stats.o: stats.c
	$(CC_RULE)

$O/stats_help.o: stats_help.help
	$(HELP_RULE)

$(CB)/stats: $O/stats.o $O/stats_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for stats
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = stats
PKG_MAKEBINS = $(CB)/stats

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= stats.c
DOCFILES= stats_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/stats.o: stats.c
	$(CC_RULE)

$O/stats_help.o: stats_help.help
	$(HELP_RULE)

$(CB)/stats: $O/stats.o $O/stats_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for stats
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = stats
PKG_MAKEBINS = $(CB)/stats

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= stats.c
DOCFILES= stats_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/stats.o: stats.c
	$(CC_RULE)

$O/stats_help.o: stats_help.help
	$(HELP_RULE)

$(CB)/stats: $O/stats.o $O/stats_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for stats
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = stats
PKG_MAKEBINS = $(CB)/stats

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= stats.c
DOCFILES= stats_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/stats.o: stats.c
	$(CC_RULE)

$O/stats_help.o: stats_help.help
	$(HELP_RULE)

$(CB)/stats: $O/stats.o $O/stats_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for stats %%%%
%%%% Exporting include files from stats %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/stats'
make[2]: Entering directory '/home/welling/git/Fiasco/src/displace'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for displace
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = displace
PKG_MAKEBINS = $(CB)/displace

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= displace.c
DOCFILES= displace_help.help

include ../Makefile.pkg

$O/displace.o: displace.c
	$(CC_RULE)

$O/displace_help.o: displace_help.help
	$(HELP_RULE)

$(CB)/displace: $O/displace.o $O/displace_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for displace
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = displace
PKG_MAKEBINS = $(CB)/displace

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= displace.c
DOCFILES= displace_help.help

include ../Makefile.pkg

$O/displace.o: displace.c
	$(CC_RULE)

$O/displace_help.o: displace_help.help
	$(HELP_RULE)

$(CB)/displace: $O/displace.o $O/displace_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for displace
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = displace
PKG_MAKEBINS = $(CB)/displace

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= displace.c
DOCFILES= displace_help.help

include ../Makefile.pkg

$O/displace.o: displace.c
	$(CC_RULE)

$O/displace_help.o: displace_help.help
	$(HELP_RULE)

$(CB)/displace: $O/displace.o $O/displace_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for displace
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = displace
PKG_MAKEBINS = $(CB)/displace

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= displace.c
DOCFILES= displace_help.help

include ../Makefile.pkg

$O/displace.o: displace.c
	$(CC_RULE)

$O/displace_help.o: displace_help.help
	$(HELP_RULE)

$(CB)/displace: $O/displace.o $O/displace_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for displace %%%%
%%%% Exporting include files from displace %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/displace'
make[2]: Entering directory '/home/welling/git/Fiasco/src/summary'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for summary
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = summary
PKG_MAKEBINS = $(CB)/summary

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= summary.c
DOCFILES= summary_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/summary.o: summary.c
	$(CC_RULE)

$O/summary_help.o: summary_help.help
	$(HELP_RULE)

$(CB)/summary: $O/summary.o $O/summary_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for summary
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = summary
PKG_MAKEBINS = $(CB)/summary

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= summary.c
DOCFILES= summary_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/summary.o: summary.c
	$(CC_RULE)

$O/summary_help.o: summary_help.help
	$(HELP_RULE)

$(CB)/summary: $O/summary.o $O/summary_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for summary
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = summary
PKG_MAKEBINS = $(CB)/summary

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= summary.c
DOCFILES= summary_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/summary.o: summary.c
	$(CC_RULE)

$O/summary_help.o: summary_help.help
	$(HELP_RULE)

$(CB)/summary: $O/summary.o $O/summary_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for summary
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = summary
PKG_MAKEBINS = $(CB)/summary

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= summary.c
DOCFILES= summary_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/summary.o: summary.c
	$(CC_RULE)

$O/summary_help.o: summary_help.help
	$(HELP_RULE)

$(CB)/summary: $O/summary.o $O/summary_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for summary %%%%
%%%% Exporting include files from summary %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/summary'
make[2]: Entering directory '/home/welling/git/Fiasco/src/phadj'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for phadj
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = phadj
PKG_MAKEBINS = $(CB)/phadj

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= phadj.c
DOCFILES= phadj_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/phadj.o: phadj.c
	$(CC_RULE)

$O/phadj_help.o: phadj_help.help
	$(HELP_RULE)

$(CB)/phadj: $O/phadj.o $O/phadj_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for phadj
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = phadj
PKG_MAKEBINS = $(CB)/phadj

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= phadj.c
DOCFILES= phadj_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/phadj.o: phadj.c
	$(CC_RULE)

$O/phadj_help.o: phadj_help.help
	$(HELP_RULE)

$(CB)/phadj: $O/phadj.o $O/phadj_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for phadj
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = phadj
PKG_MAKEBINS = $(CB)/phadj

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= phadj.c
DOCFILES= phadj_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/phadj.o: phadj.c
	$(CC_RULE)

$O/phadj_help.o: phadj_help.help
	$(HELP_RULE)

$(CB)/phadj: $O/phadj.o $O/phadj_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for phadj
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = phadj
PKG_MAKEBINS = $(CB)/phadj

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= phadj.c
DOCFILES= phadj_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/phadj.o: phadj.c
	$(CC_RULE)

$O/phadj_help.o: phadj_help.help
	$(HELP_RULE)

$(CB)/phadj: $O/phadj.o $O/phadj_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for phadj %%%%
%%%% Exporting include files from phadj %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/phadj'
make[2]: Entering directory '/home/welling/git/Fiasco/src/spiral'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for spiral %%%%
%%%% Exporting include files from spiral %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/spiral'
make[2]: Entering directory '/home/welling/git/Fiasco/src/estireg'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for estireg %%%%
%%%% Exporting include files from estireg %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/estireg'
make[2]: Entering directory '/home/welling/git/Fiasco/src/gift'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for gift %%%%
%%%% Exporting include files from gift %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/gift'
make[2]: Entering directory '/home/welling/git/Fiasco/src/baseline2'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for baseline2
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		9/96	Written by Greg Hood (PSC)
#

PKG          = baseline2
PKG_MAKEBINS = $(CB)/baseline2

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= baseline2.c
DOCFILES= baseline2_help.help

include ../Makefile.pkg

$O/baseline2.o: baseline2.c
	$(CC_RULE)

$O/baseline2_help.o: baseline2_help.help
	$(HELP_RULE)

$(CB)/baseline2: $O/baseline2.o $O/baseline2_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for baseline2
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		9/96	Written by Greg Hood (PSC)
#

PKG          = baseline2
PKG_MAKEBINS = $(CB)/baseline2

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= baseline2.c
DOCFILES= baseline2_help.help

include ../Makefile.pkg

$O/baseline2.o: baseline2.c
	$(CC_RULE)

$O/baseline2_help.o: baseline2_help.help
	$(HELP_RULE)

$(CB)/baseline2: $O/baseline2.o $O/baseline2_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for baseline2
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		9/96	Written by Greg Hood (PSC)
#

PKG          = baseline2
PKG_MAKEBINS = $(CB)/baseline2

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= baseline2.c
DOCFILES= baseline2_help.help

include ../Makefile.pkg

$O/baseline2.o: baseline2.c
	$(CC_RULE)

$O/baseline2_help.o: baseline2_help.help
	$(HELP_RULE)

$(CB)/baseline2: $O/baseline2.o $O/baseline2_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for baseline2
#
#	Copyright (c) 1996  Pittsburgh Supercomputing Center
#
#	HISTORY
#		9/96	Written by Greg Hood (PSC)
#

PKG          = baseline2
PKG_MAKEBINS = $(CB)/baseline2

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= baseline2.c
DOCFILES= baseline2_help.help

include ../Makefile.pkg

$O/baseline2.o: baseline2.c
	$(CC_RULE)

$O/baseline2_help.o: baseline2_help.help
	$(HELP_RULE)

$(CB)/baseline2: $O/baseline2.o $O/baseline2_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for baseline2 %%%%
%%%% Exporting include files from baseline2 %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/baseline2'
make[2]: Entering directory '/home/welling/git/Fiasco/src/brain'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for brain %%%%
%%%% Exporting include files from brain %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/brain'
make[2]: Entering directory '/home/welling/git/Fiasco/src/partialk'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for partialk
#
#	Copyright (c) 1997  Pittsburgh Supercomputing Center
#
#	HISTORY
#		12/97	Adapted from baseline Makefile by Joel Welling, CMU
#

PKG          = partialk
PKG_MAKEBINS = $(CB)/partialk

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= partialk.c
DOCFILES= partialk_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/partialk.o: partialk.c
	$(CC_RULE)

$O/partialk_help.o: partialk_help.help
	$(HELP_RULE)

$(CB)/partialk: $O/partialk.o $O/partialk_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for partialk
#
#	Copyright (c) 1997  Pittsburgh Supercomputing Center
#
#	HISTORY
#		12/97	Adapted from baseline Makefile by Joel Welling, CMU
#

PKG          = partialk
PKG_MAKEBINS = $(CB)/partialk

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= partialk.c
DOCFILES= partialk_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/partialk.o: partialk.c
	$(CC_RULE)

$O/partialk_help.o: partialk_help.help
	$(HELP_RULE)

$(CB)/partialk: $O/partialk.o $O/partialk_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for partialk
#
#	Copyright (c) 1997  Pittsburgh Supercomputing Center
#
#	HISTORY
#		12/97	Adapted from baseline Makefile by Joel Welling, CMU
#

PKG          = partialk
PKG_MAKEBINS = $(CB)/partialk

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= partialk.c
DOCFILES= partialk_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/partialk.o: partialk.c
	$(CC_RULE)

$O/partialk_help.o: partialk_help.help
	$(HELP_RULE)

$(CB)/partialk: $O/partialk.o $O/partialk_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for partialk
#
#	Copyright (c) 1997  Pittsburgh Supercomputing Center
#
#	HISTORY
#		12/97	Adapted from baseline Makefile by Joel Welling, CMU
#

PKG          = partialk
PKG_MAKEBINS = $(CB)/partialk

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= partialk.c
DOCFILES= partialk_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/partialk.o: partialk.c
	$(CC_RULE)

$O/partialk_help.o: partialk_help.help
	$(HELP_RULE)

$(CB)/partialk: $O/partialk.o $O/partialk_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for partialk %%%%
%%%% Exporting include files from partialk %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/partialk'
make[2]: Entering directory '/home/welling/git/Fiasco/src/physio'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 1997 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		9/97	Written by Joel S. Welling (CMU)
#

PKG          = physio
PKG_MAKEBINS = $(CB)/cardiopeaks $(CB)/resppeaks $(CB)/syncpeaks $(CB)/eventpeaks

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= cardiopeaks.c resppeaks.c polyfit.c syncpeaks.c eventpeaks.c
HFILES= polyfit.h
DOCFILES= cardiopeaks_help.help resppeaks_help.help syncpeaks_help.help eventpeaks_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

IBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/cardiopeaks.o: cardiopeaks.c
	$(CC_RULE)

$O/resppeaks.o: resppeaks.c
	$(CC_RULE)

$O/polyfit.o: polyfit.c
	$(CC_RULE)

$O/syncpeaks.o: syncpeaks.c
	$(CC_RULE)

$O/eventpeaks.o: eventpeaks.c
	$(CC_RULE)

$O/cardiopeaks_help.o: cardiopeaks_help.help
	$(HELP_RULE)

$O/resppeaks_help.o: resppeaks_help.help
	$(HELP_RULE)

$O/syncpeaks_help.o: syncpeaks_help.help
	$(HELP_RULE)

$O/eventpeaks_help.o: eventpeaks_help.help
	$(HELP_RULE)

$(CB)/cardiopeaks: $O/cardiopeaks.o $O/polyfit.o $O/cardiopeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/cardiopeaks $O/cardiopeaks.o $O/polyfit.o \
		$O/cardiopeaks_help.o $(LIBS)

$(CB)/resppeaks: $O/resppeaks.o $O/polyfit.o $O/resppeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/resppeaks $O/resppeaks.o $O/polyfit.o \
		$O/resppeaks_help.o $(LIBS)

$(CB)/syncpeaks: $O/syncpeaks.o $O/polyfit.o $O/syncpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/syncpeaks $O/syncpeaks.o $O/polyfit.o \
		$O/syncpeaks_help.o $(LIBS)

$(CB)/eventpeaks: $O/eventpeaks.o $O/polyfit.o $O/eventpeaks_help.o
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/eventpeaks $O/eventpeaks.o $O/polyfit.o \
		$O/eventpeaks_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for physio %%%%
%%%% Exporting include files from physio %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/physio'
make[2]: Entering directory '/home/welling/git/Fiasco/src/ireg3d'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for ireg3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg3d
PKG_MAKEBINS = $(CB)/ireg3d $(CB)/iwarp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg3d.c iwarp.c
DOCFILES= ireg3d_help.help iwarp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg3d.o: ireg3d.c
	$(CC_RULE)

$O/ireg3d_help.o: ireg3d_help.help
	$(HELP_RULE)

$(CB)/ireg3d: $O/ireg3d.o $O/ireg3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/iwarp.o: iwarp.c
	$(CC_RULE)

$O/iwarp_help.o: iwarp_help.help
	$(HELP_RULE)

$(CB)/iwarp: $O/iwarp.o $O/iwarp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg3d
PKG_MAKEBINS = $(CB)/ireg3d $(CB)/iwarp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg3d.c iwarp.c
DOCFILES= ireg3d_help.help iwarp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg3d.o: ireg3d.c
	$(CC_RULE)

$O/ireg3d_help.o: ireg3d_help.help
	$(HELP_RULE)

$(CB)/ireg3d: $O/ireg3d.o $O/ireg3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/iwarp.o: iwarp.c
	$(CC_RULE)

$O/iwarp_help.o: iwarp_help.help
	$(HELP_RULE)

$(CB)/iwarp: $O/iwarp.o $O/iwarp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg3d
PKG_MAKEBINS = $(CB)/ireg3d $(CB)/iwarp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg3d.c iwarp.c
DOCFILES= ireg3d_help.help iwarp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg3d.o: ireg3d.c
	$(CC_RULE)

$O/ireg3d_help.o: ireg3d_help.help
	$(HELP_RULE)

$(CB)/ireg3d: $O/ireg3d.o $O/ireg3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/iwarp.o: iwarp.c
	$(CC_RULE)

$O/iwarp_help.o: iwarp_help.help
	$(HELP_RULE)

$(CB)/iwarp: $O/iwarp.o $O/iwarp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg3d
PKG_MAKEBINS = $(CB)/ireg3d $(CB)/iwarp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg3d.c iwarp.c
DOCFILES= ireg3d_help.help iwarp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg3d.o: ireg3d.c
	$(CC_RULE)

$O/ireg3d_help.o: ireg3d_help.help
	$(HELP_RULE)

$(CB)/ireg3d: $O/ireg3d.o $O/ireg3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/iwarp.o: iwarp.c
	$(CC_RULE)

$O/iwarp_help.o: iwarp_help.help
	$(HELP_RULE)

$(CB)/iwarp: $O/iwarp.o $O/iwarp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg3d
PKG_MAKEBINS = $(CB)/ireg3d $(CB)/iwarp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg3d.c iwarp.c
DOCFILES= ireg3d_help.help iwarp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg3d.o: ireg3d.c
	$(CC_RULE)

$O/ireg3d_help.o: ireg3d_help.help
	$(HELP_RULE)

$(CB)/ireg3d: $O/ireg3d.o $O/ireg3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/iwarp.o: iwarp.c
	$(CC_RULE)

$O/iwarp_help.o: iwarp_help.help
	$(HELP_RULE)

$(CB)/iwarp: $O/iwarp.o $O/iwarp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg3d
PKG_MAKEBINS = $(CB)/ireg3d $(CB)/iwarp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg3d.c iwarp.c
DOCFILES= ireg3d_help.help iwarp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg3d.o: ireg3d.c
	$(CC_RULE)

$O/ireg3d_help.o: ireg3d_help.help
	$(HELP_RULE)

$(CB)/ireg3d: $O/ireg3d.o $O/ireg3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/iwarp.o: iwarp.c
	$(CC_RULE)

$O/iwarp_help.o: iwarp_help.help
	$(HELP_RULE)

$(CB)/iwarp: $O/iwarp.o $O/iwarp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for ireg3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#

PKG          = ireg3d
PKG_MAKEBINS = $(CB)/ireg3d $(CB)/iwarp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= ireg3d.c iwarp.c
DOCFILES= ireg3d_help.help iwarp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/ireg3d.o: ireg3d.c
	$(CC_RULE)

$O/ireg3d_help.o: ireg3d_help.help
	$(HELP_RULE)

$(CB)/ireg3d: $O/ireg3d.o $O/ireg3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

$O/iwarp.o: iwarp.c
	$(CC_RULE)

$O/iwarp_help.o: iwarp_help.help
	$(HELP_RULE)

$(CB)/iwarp: $O/iwarp.o $O/iwarp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for ireg3d %%%%
%%%% Exporting include files from ireg3d %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/ireg3d'
make[2]: Entering directory '/home/welling/git/Fiasco/src/estireg3d'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for estireg3d %%%%
%%%% Exporting include files from estireg3d %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/estireg3d'
make[2]: Entering directory '/home/welling/git/Fiasco/src/smregpar3d'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
versity
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#                4/00   modified smregpar -> smregpar3d Joel Welling (CMU)
#

PKG          = smregpar3d
PKG_MAKEBINS = $(CB)/smregpar3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= smregpar3d.c
DOCFILES= smregpar3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/smregpar3d.o: smregpar3d.c
	$(CC_RULE)

$O/smregpar3d_help.o: smregpar3d_help.help
	$(HELP_RULE)

$(CB)/smregpar3d: $O/smregpar3d.o $O/smregpar3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

versity
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#                4/00   modified smregpar -> smregpar3d Joel Welling (CMU)
#

PKG          = smregpar3d
PKG_MAKEBINS = $(CB)/smregpar3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= smregpar3d.c
DOCFILES= smregpar3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/smregpar3d.o: smregpar3d.c
	$(CC_RULE)

$O/smregpar3d_help.o: smregpar3d_help.help
	$(HELP_RULE)

$(CB)/smregpar3d: $O/smregpar3d.o $O/smregpar3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

versity
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#                4/00   modified smregpar -> smregpar3d Joel Welling (CMU)
#

PKG          = smregpar3d
PKG_MAKEBINS = $(CB)/smregpar3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= smregpar3d.c
DOCFILES= smregpar3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/smregpar3d.o: smregpar3d.c
	$(CC_RULE)

$O/smregpar3d_help.o: smregpar3d_help.help
	$(HELP_RULE)

$(CB)/smregpar3d: $O/smregpar3d.o $O/smregpar3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

versity
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#                4/00   modified smregpar -> smregpar3d Joel Welling (CMU)
#

PKG          = smregpar3d
PKG_MAKEBINS = $(CB)/smregpar3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= smregpar3d.c
DOCFILES= smregpar3d_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a $L/libfmri.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/smregpar3d.o: smregpar3d.c
	$(CC_RULE)

$O/smregpar3d_help.o: smregpar3d_help.help
	$(HELP_RULE)

$(CB)/smregpar3d: $O/smregpar3d.o $O/smregpar3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for smregpar3d %%%%
%%%% Exporting include files from smregpar3d %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/smregpar3d'
make[2]: Entering directory '/home/welling/git/Fiasco/src/displace3d'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for displace3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#                5/00   Modified for 3D by Joel Welling (CMU)
#

PKG          = displace3d
PKG_MAKEBINS = $(CB)/displace3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= displace3d.c
DOCFILES= displace3d_help.help

include ../Makefile.pkg

$O/displace3d.o: displace3d.c
	$(CC_RULE)

$O/displace3d_help.o: displace3d_help.help
	$(HELP_RULE)

$(CB)/displace3d: $O/displace3d.o $O/displace3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for displace3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#                5/00   Modified for 3D by Joel Welling (CMU)
#

PKG          = displace3d
PKG_MAKEBINS = $(CB)/displace3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= displace3d.c
DOCFILES= displace3d_help.help

include ../Makefile.pkg

$O/displace3d.o: displace3d.c
	$(CC_RULE)

$O/displace3d_help.o: displace3d_help.help
	$(HELP_RULE)

$(CB)/displace3d: $O/displace3d.o $O/displace3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for displace3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#                5/00   Modified for 3D by Joel Welling (CMU)
#

PKG          = displace3d
PKG_MAKEBINS = $(CB)/displace3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= displace3d.c
DOCFILES= displace3d_help.help

include ../Makefile.pkg

$O/displace3d.o: displace3d.c
	$(CC_RULE)

$O/displace3d_help.o: displace3d_help.help
	$(HELP_RULE)

$(CB)/displace3d: $O/displace3d.o $O/displace3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for displace3d
#
#	Copyright (c) 1996 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		12/96	Written by William F. Eddy (CMU)
#                5/00   Modified for 3D by Joel Welling (CMU)
#

PKG          = displace3d
PKG_MAKEBINS = $(CB)/displace3d

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lmisc -lcrg $(LAPACK_LIBS) -lm

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

MAKEFILES= Makefile
CSOURCE= displace3d.c
DOCFILES= displace3d_help.help

include ../Makefile.pkg

$O/displace3d.o: displace3d.c
	$(CC_RULE)

$O/displace3d_help.o: displace3d_help.help
	$(HELP_RULE)

$(CB)/displace3d: $O/displace3d.o $O/displace3d_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for displace3d %%%%
%%%% Exporting include files from displace3d %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/displace3d'
make[2]: Entering directory '/home/welling/git/Fiasco/src/par_util'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for mri utilities
#
#	Copyright (c) 2000 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		6/00	Written by Joel S. Welling (CMU)
#

PKG          = par_util
PKG_MAKEBINS = $(CB)/par_translate

PKG_LIBS     = -ldcdf -lfmri -lmri -lpar -lbio -lacct -lmisc \
	-lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= par_translate.c
HFILES= parameters.h
DOCFILES= par_translate_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a

$O/par_translate.o: par_translate.c
	$(CC_RULE)

$O/par_translate_help.o: par_translate_help.help
	$(HELP_RULE)

$(CB)/par_translate: $O/par_translate.o $O/par_translate_help.o 
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/$(@F) $O/par_translate.o \
		$O/par_translate_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 2000 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		6/00	Written by Joel S. Welling (CMU)
#

PKG          = par_util
PKG_MAKEBINS = $(CB)/par_translate

PKG_LIBS     = -ldcdf -lfmri -lmri -lpar -lbio -lacct -lmisc \
	-lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= par_translate.c
HFILES= parameters.h
DOCFILES= par_translate_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a

$O/par_translate.o: par_translate.c
	$(CC_RULE)

$O/par_translate_help.o: par_translate_help.help
	$(HELP_RULE)

$(CB)/par_translate: $O/par_translate.o $O/par_translate_help.o 
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/$(@F) $O/par_translate.o \
		$O/par_translate_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 2000 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		6/00	Written by Joel S. Welling (CMU)
#

PKG          = par_util
PKG_MAKEBINS = $(CB)/par_translate

PKG_LIBS     = -ldcdf -lfmri -lmri -lpar -lbio -lacct -lmisc \
	-lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= par_translate.c
HFILES= parameters.h
DOCFILES= par_translate_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a

$O/par_translate.o: par_translate.c
	$(CC_RULE)

$O/par_translate_help.o: par_translate_help.help
	$(HELP_RULE)

$(CB)/par_translate: $O/par_translate.o $O/par_translate_help.o 
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/$(@F) $O/par_translate.o \
		$O/par_translate_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for mri utilities
#
#	Copyright (c) 2000 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		6/00	Written by Joel S. Welling (CMU)
#

PKG          = par_util
PKG_MAKEBINS = $(CB)/par_translate

PKG_LIBS     = -ldcdf -lfmri -lmri -lpar -lbio -lacct -lmisc \
	-lcrg $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= par_translate.c
HFILES= parameters.h
DOCFILES= par_translate_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a

$O/par_translate.o: par_translate.c
	$(CC_RULE)

$O/par_translate_help.o: par_translate_help.help
	$(HELP_RULE)

$(CB)/par_translate: $O/par_translate.o $O/par_translate_help.o 
	@echo "%%%% Linking $(@F) %%%%" 
	@$(LD) $(LFLAGS) -o $B/$(@F) $O/par_translate.o \
		$O/par_translate_help.o $(LIBS)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for par_util %%%%
%%%% Exporting include files from par_util %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/par_util'
make[2]: Entering directory '/home/welling/git/Fiasco/src/morphology'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for morphology %%%%
%%%% Exporting include files from morphology %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/morphology'
make[2]: Entering directory '/home/welling/git/Fiasco/src/fiat_scripts'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
@( for i in \( $(SCRIPTFILES) \); do \
	  if test \( -f ../csh/$$i \); \
		then ( echo "%%%% Hiding ../csh/$$i %%%%" ; \
			mv ../csh/$$i ../csh/$$i.old ); fi; \
	done )
@( for i in \( $(SCRIPTFILES) \); do \
	  if test \( -f ../csh/$$i \); \
		then ( echo "%%%% Hiding ../csh/$$i %%%%" ; \
			mv ../csh/$$i ../csh/$$i.old ); fi; \
	done )
@( for i in \( $(SCRIPTFILES) \); do \
	  if test \( -f ../csh/$$i \); \
		then ( echo "%%%% Hiding ../csh/$$i %%%%" ; \
			mv ../csh/$$i ../csh/$$i.old ); fi; \
	done )
@( for i in \( $(SCRIPTFILES) \); do \
	  if test \( -f ../csh/$$i \); \
		then ( echo "%%%% Hiding ../csh/$$i %%%%" ; \
			mv ../csh/$$i ../csh/$$i.old ); fi; \
	done )
%%%% Creating directories for fiat_scripts %%%%
%%%% Exporting include files from fiat_scripts %%%%
%%%% Exporting scripts from fiat_scripts %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/fiat_scripts'
make[2]: Entering directory '/home/welling/git/Fiasco/src/scripthelp'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
#
#	Makefile for scripthelp
#
#	Copyright (c) 2001 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		6/01  Modified from existing code by Joel Welling
#

PKG          = scripthelp
PKG_MAKEBINS = $(CB)/scripthelp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= scripthelp.c
DOCFILES= scripthelp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/scripthelp.o: scripthelp.c
	$(CC_RULE)

$O/scripthelp_help.o: scripthelp_help.help
	$(HELP_RULE)

$(CB)/scripthelp: $O/scripthelp.o $O/scripthelp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for scripthelp
#
#	Copyright (c) 2001 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		6/01  Modified from existing code by Joel Welling
#

PKG          = scripthelp
PKG_MAKEBINS = $(CB)/scripthelp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= scripthelp.c
DOCFILES= scripthelp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/scripthelp.o: scripthelp.c
	$(CC_RULE)

$O/scripthelp_help.o: scripthelp_help.help
	$(HELP_RULE)

$(CB)/scripthelp: $O/scripthelp.o $O/scripthelp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for scripthelp
#
#	Copyright (c) 2001 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		6/01  Modified from existing code by Joel Welling
#

PKG          = scripthelp
PKG_MAKEBINS = $(CB)/scripthelp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= scripthelp.c
DOCFILES= scripthelp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/scripthelp.o: scripthelp.c
	$(CC_RULE)

$O/scripthelp_help.o: scripthelp_help.help
	$(HELP_RULE)

$(CB)/scripthelp: $O/scripthelp.o $O/scripthelp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

#
#	Makefile for scripthelp
#
#	Copyright (c) 2001 Department of Statistics, Carnegie Mellon University
#
#	HISTORY
#		6/01  Modified from existing code by Joel Welling
#

PKG          = scripthelp
PKG_MAKEBINS = $(CB)/scripthelp

PKG_LIBS     = -lfmri -lmri -lpar -lbio -lacct -lcrg -lmisc $(LAPACK_LIBS) -lm

MAKEFILES= Makefile
CSOURCE= scripthelp.c
DOCFILES= scripthelp_help.help

include ../Makefile.pkg

LIBFILES= $L/libmri.a $L/libpar.a $L/libbio.a $L/libarray.a $L/libmisc.a \
	$L/libacct.a
HDRS= fmri.h mri.h par.h bio.h misc.h acct.h stdcrg.h

$O/scripthelp.o: scripthelp.c
	$(CC_RULE)

$O/scripthelp_help.o: scripthelp_help.help
	$(HELP_RULE)

$(CB)/scripthelp: $O/scripthelp.o $O/scripthelp_help.o $(LIBFILES)
	$(SINGLE_HELP_LD)

releaseprep:
	echo "no release prep from " `pwd`

%%%% Creating directories for scripthelp %%%%
%%%% Exporting include files from scripthelp %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/scripthelp'
make[2]: Entering directory '/home/welling/git/Fiasco/src/mripipes'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
%%%% Creating directories for mripipes %%%%
%%%% Exporting include files from mripipes %%%%
%%%% Building python module _mripipes.so %%%%
srcFileList: <['mripipes.c', 'mripipes_wrap.c', 'test_tool.c', 'mri_file_input_tool.c', 'devnull_tool.c', 'passthru_tool.c', 'mri_file_output_tool.c', 'matmult_tool.c', 'rpn_math_tool.c', 'zero_src_tool.c', 'subset_tool.c', 'pad_tool.c', 'block_map_tool.c', 'func_2rows_unblocked_tool.c', 'special_tool.c']>
running build
running build_py
running build_ext
# This target captures the build environment in a sourceable file
echo CFLAGS='"'-D_BSD_SOURCE -D_XOPEN_SOURCE=500 -DFORTRAN_ADD_UNDERSCORE -Wimplicit -DLINUX -O -fPIC -DLINUXX86_64 -I/home/welling/git/Fiasco/include/LINUXX86_64 -DMPI -DFFTW3      -DNOAFS  -I/home/welling/anaconda3/envs/py3Env/include/python3.7'"' \
	> build_envs.bash
echo LFLAGS='"'-L/home/welling/git/Fiasco/lib/LINUXX86_64  -lfftw3 -lm -lfmri -lmri -lbio -lcrg -lmisc -ldcdf -llapack -lblas -lm'"' \
	>> build_envs.bash
echo SRCFILES='"'mripipes.c mripipes_wrap.c test_tool.c mri_file_input_tool.c devnull_tool.c passthru_tool.c mri_file_output_tool.c matmult_tool.c rpn_math_tool.c zero_src_tool.c subset_tool.c pad_tool.c block_map_tool.c func_2rows_unblocked_tool.c special_tool.c'"' >> build_envs.bash
make[2]: Leaving directory '/home/welling/git/Fiasco/src/mripipes'
make[2]: Entering directory '/home/welling/git/Fiasco/src/csh'
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
"about to include depend.mk.LINUXX86_64"
"return from include depend.mk.LINUXX86_64"
tar rvf /tmp/fiat.tar -C $(FMRI) \
		` $(B)/prefix $(REL_DIR) $(HFILES) $(CSOURCE) $(MAKEFILES) \
		$(DOCFILES) $(SCRIPTFILES) $(MISCFILES) depend.mk.dummy `
tar rvf /tmp/fiat.tar -C $(FMRI) \
		` $(B)/prefix $(REL_DIR) $(HFILES) $(CSOURCE) $(MAKEFILES) \
		$(DOCFILES) $(SCRIPTFILES) $(MISCFILES) depend.mk.dummy `
tar rvf /tmp/fiat.tar -C $(FMRI) \
		` $(B)/prefix $(REL_DIR) $(HFILES) $(CSOURCE) $(MAKEFILES) \
		$(DOCFILES) $(SCRIPTFILES) $(MISCFILES) depend.mk.dummy `
%%%% Creating directories for csh %%%%
%%%% Exporting include files from csh %%%%
rm -f fiasco.local.csh
awk '{ if (index($0,"setenv SPLUS")==1) { \
		print "#"$0; print "setenv SPLUS \"/usr/bin/R --no-save\""} \
	else { print $0}} ' < fiasco.local_orig.csh > fiasco.local.csh
chmod go+x fiasco.local.csh FIASCO *.csh *.py
chmod u+x fiasco.local.csh FIASCO *.csh *.py
cp -f FIASCO *.csh *.py /home/welling/git/Fiasco/bin/LINUXX86_64
%%%% Generating FIASCO.html %%%%
%%%% Generating groupcompare.csh.html %%%%
%%%% Generating make_merged_maps.csh.html %%%%
%%%% Generating merge_detrend.csh.html %%%%
%%%% Generating false_discovery.py.html %%%%
%%%% Generating testingroup.csh.html %%%%
%%%% Generating pooled_mean.csh.html %%%%
%%%% Generating pooled_stdv.csh.html %%%%
%%%% Generating stats_to_floats.csh.html %%%%
%%%% Generating make_cine.csh.html %%%%
%%%% Generating make_phase_cine.csh.html %%%%
%%%% Generating color_by_phase.csh.html %%%%
%%%% Generating overlay.csh.html %%%%
%%%% Generating physio_correct_triggered.py.html %%%%
%%%% Generating dataset_matches_env.py.html %%%%
%%%% Generating pick_n_voxels.py.html %%%%
%%%% Generating customize_local.py.html %%%%
%%%% Generating coregister_inplane.py.html %%%%
%%%% Generating make_P_P_plots.csh.html %%%%
%%%% Generating coregister_struct_to_inplane.py.html %%%%
%%%% Generating coregister.py.html %%%%
%%%% Generating multi_runner.py.html %%%%
%%%% Generating renumber_ifiles.py.html %%%%
%%%% Generating convert_ifiles.py.html %%%%
%%%% Generating make_group_anat.csh.html %%%%
%%%% Generating afni_estireg3d.csh.html %%%%
%%%% Generating combine.csh.html %%%%
%%%% Generating calc_stats_over_roi.py.html %%%%
%%%% Generating icbm_to_tlrc.py.html %%%%
%%%% Generating tlrc_to_icbm.py.html %%%%
%%%% Generating pca.py.html %%%%
%%%% Generating align_by_permutation.py.html %%%%
%%%% Generating coregister_makeps.py.html %%%%
%%%% Generating cowarp_inplane.py.html %%%%
%%%% Generating paste_split.py.html %%%%
%%%% Generating build_model_matrix.py.html %%%%
%%%% Generating pullback_roi_mask.py.html %%%%
%%%% Generating plot_roi_time_series.py.html %%%%
%%%% Generating strip_skull.py.html %%%%
%%%% Generating epoch_subset.py.html %%%%
%%%% Generating afni_tshift.py.html %%%%
%%%% Generating plot_roi_event_response.py.html %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/src/csh'
make[2]: Entering directory '/home/welling/git/Fiasco/splus/script'
%%%% read.S is no longer compiled by default %%%%
make[2]: Leaving directory '/home/welling/git/Fiasco/splus/script'
make[2]: Entering directory '/home/welling/git/Fiasco/splus/dlo_src'
make[2]: Leaving directory '/home/welling/git/Fiasco/splus/dlo_src'
make[1]: Leaving directory '/home/welling/git/Fiasco'
