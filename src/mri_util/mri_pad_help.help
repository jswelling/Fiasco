*Introduction

  mri_pad is the opposite of mri_subset. It takes a pgh MRI dataset of
  any type and outputs a dataset of the same type containing a padded
  version of the data.  This version contains the original data, with one 
  dimension extended.  The pad operation acts on all chunks in the dataset.

  The command line for mri_pad is:
    mri_pad [-dimension v|x|y|z|t] -length Length [-shift Shift] 
	[-fillvalue Fillvalue] [-verbose] infile outfile

  or:
    mri_pad -help

*Defaults

  Unless you define the following optional elements, mri_pad will use
  the following defaults:

  Dimension:	t (time)
  Shift:  	0
  Fill value:	0

*Arguments:length
  -length Length                 (-l|len Length)

  Ex: -l 200
  The value of length specifies the new length of the selected
  dimension.  This value must be greater than or equal to the original
  length, and is a sum of the original length and the padding.
  This argument is required.


*Arguments:dimension
  [-dimension v|x|y|z|t]	(-d v|x|y|z|t)

  Ex. -d t
 
  The value of dimension is a single character that specifies the
  dimension along which to pad the input file.  Valid values
  are one character from the dimension string of the input data
  (typically one of the following: v x y z t); case is ignored. Default is "t".


*Arguments:shift
  [-shift Shift]	(-s)

  Ex: -s 5   (starts the original data at the sixth value along the
  desired dimention)

  The shift value specifies where the original data begins (counting
  from 0) along the selected dimension.  Default is 0.


*Arguments:fillvalue
  [-fillvalue Fillvalue]	(-fil)

  The fill value specifies the number to use as padding.  This value
  is read as a float, then converted to match the needed data type(s).
  Default is 0, and all new slots must have the same fill value. 


*Arguments:v
  [-verbose]	(-v)

  Turning on the verbose option displays the progress of mri_pad on the screen.
  

*Details:Inputs and Outputs

  The outfile is not allowed to have the same name as the infile.

  If the selected dimension is not present in any chunk, the infile
  will be copied to the outfile and you will get a warning that the
  two files are identical.


*Details:Chunks

  Chunks not containing the selected dimension are copied verbatim.

  Any chunk containing too many entries to be padded as specified
  causes mri_pad to abort.

*Examples

  In the following examples, assume that the original length of the
  dimension being padded is 50. The infile is "pingpong" and the
  outfile is "volleyball".

  Ex.  mri_pad -l 100 pingpong volleyball

  This use takes all the defaults:

    -d   t (time dimension)
    -s   0 
    -fil 0   

  This places 50 new slots for time at the end of the original data,
  "pingpong". Each of those slots is filled by 0. This is all placed
  into a new outfile, "volleyball".

  Ex.  mri_pad -d x -l 100 -s 50 -fil 5 pingpong volleyball

  This use places 50 new slots for the x dimension before the original
  data, the value of each of which is 5.

  Ex.  mri_pad -l 100 -s 25 -v pingpong volleyball

  This use places the original data in the middle of the extended
  range, with 25 new slots followed by the 50 slots of original data
  followed by 25 new slots.  The value in the new slots is 0.  The
  verbose flag is turned on to display the progress of mri_pad.
